<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.delai.bees.tops.dao.BitAnalogSignalsMapper">
  <resultMap id="BaseResultMap" type="com.delai.bees.tops.entity.BitAnalogSignals">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Mar 24 11:42:48 CST 2019.
    -->
    <id column="Id" jdbcType="VARCHAR" property="id" />
    <result column="Name" jdbcType="VARCHAR" property="name" />
    <result column="Val" jdbcType="DOUBLE" property="val" />
    <result column="Ts" jdbcType="TIMESTAMP" property="ts" />
    <result column="Signal_Id" jdbcType="VARCHAR" property="signalId" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Mar 24 11:42:48 CST 2019.
    -->
    `Id`, `Name`, `Val`, `Ts`, `Signal_Id`
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Mar 24 11:42:48 CST 2019.
    -->
    select 
    <include refid="Base_Column_List" />
    from `Bit_Analog_Signals`
    where `Id` = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Mar 24 11:42:48 CST 2019.
    -->
    delete from `Bit_Analog_Signals`
    where `Id` = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.delai.bees.tops.entity.BitAnalogSignals">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Mar 24 11:42:48 CST 2019.
    -->
    insert into `Bit_Analog_Signals` (`Id`, `Name`, `Val`, 
      `Ts`, `Signal_Id`)
    values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{val,jdbcType=DOUBLE}, 
      #{ts,jdbcType=TIMESTAMP}, #{signalId,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.delai.bees.tops.entity.BitAnalogSignals">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Mar 24 11:42:48 CST 2019.
    -->
    insert into `Bit_Analog_Signals`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        `Id`,
      </if>
      <if test="name != null">
        `Name`,
      </if>
      <if test="val != null">
        `Val`,
      </if>
      <if test="ts != null">
        `Ts`,
      </if>
      <if test="signalId != null">
        `Signal_Id`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="val != null">
        #{val,jdbcType=DOUBLE},
      </if>
      <if test="ts != null">
        #{ts,jdbcType=TIMESTAMP},
      </if>
      <if test="signalId != null">
        #{signalId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.delai.bees.tops.entity.BitAnalogSignals">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Mar 24 11:42:48 CST 2019.
    -->
    update `Bit_Analog_Signals`
    <set>
      <if test="name != null">
        `Name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="val != null">
        `Val` = #{val,jdbcType=DOUBLE},
      </if>
      <if test="ts != null">
        `Ts` = #{ts,jdbcType=TIMESTAMP},
      </if>
      <if test="signalId != null">
        `Signal_Id` = #{signalId,jdbcType=VARCHAR},
      </if>
    </set>
    where `Id` = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.delai.bees.tops.entity.BitAnalogSignals">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Mar 24 11:42:48 CST 2019.
    -->
    update `Bit_Analog_Signals`
    set `Name` = #{name,jdbcType=VARCHAR},
      `Val` = #{val,jdbcType=DOUBLE},
      `Ts` = #{ts,jdbcType=TIMESTAMP},
      `Signal_Id` = #{signalId,jdbcType=VARCHAR}
    where `Id` = #{id,jdbcType=VARCHAR}
  </update>
  <select id="condition" resultMap="BaseResultMap">
    select <include refid='Base_Column_List' /> from `Bit_Analog_Signals` where ${condition}
  </select>
  <delete id="deleteByIds">
    delete from `Bit_Analog_Signals` where 1=1 	
	<choose>  
	 <when test='records!=null and records.size>0'>  
	     and `Id` in  
	     <foreach collection='records' item='record' index='index' open='(' close=')' separator=','>  
	         #{record.id}  
	     </foreach>  
	 </when>  
	 <otherwise>  
	     and 1 &lt;&gt; 1  
	 </otherwise>  
	</choose>  

  </delete>
  <select id="findAll" resultMap="BaseResultMap">
    select <include refid='Base_Column_List' /> from `Bit_Analog_Signals` where 1=1 
  </select>
  <select id="findByIds" parameterType="com.delai.bees.tops.entity.BitAnalogSignals" resultMap="BaseResultMap">
    select <include refid='Base_Column_List' /> from `Bit_Analog_Signals` where 1=1 	
	<choose>  
	 <when test='ids!=null and ids.size>0'>  
	     and `Id` in  
	     <foreach collection='ids' item='id' index='index' open='(' close=')' separator=','>  
	         #{id}  
	     </foreach>  
	 </when>  
	 <otherwise>  
	     and 1 &lt;&gt; 1  
	 </otherwise>  
	</choose>  

  </select>
  <select id="query" parameterType="com.delai.bees.tops.entity.BitAnalogSignals" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" /> from `Bit_Analog_Signals` where 1=1 
    <if test="record.id != null">
      and `Id` = #{record.id,jdbcType=VARCHAR}
    </if>
    <if test="record.name != null">
      and `Name` = #{record.name,jdbcType=VARCHAR}
    </if>
    <if test="record.val != null">
      and `Val` = #{record.val,jdbcType=DOUBLE}
    </if>
    <if test="record.ts != null">
      and `Ts` = #{record.ts,jdbcType=TIMESTAMP}
    </if>
    <if test="record.signalId != null">
      and `Signal_Id` = #{record.signalId,jdbcType=VARCHAR}
    </if>
  </select>
  <select id="example" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" /> from `Bit_Analog_Signals` where 1=1 order by RAND() limit 1
  </select>
  <select id="nexample" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" /> from `Bit_Analog_Signals` where 1=1 order by RAND() limit #{n}
  </select>
  <select id="search" parameterType="com.delai.bees.tops.entity.BitAnalogSignals" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" /> from `Bit_Analog_Signals` where 1=1 
    <if test="record.id != null and record.id !=''">
      and `Id` like concat('%', #{record.id,jdbcType=VARCHAR}, '%')
    </if>
    <if test="record.name != null and record.name !=''">
      and `Name` like concat('%', #{record.name,jdbcType=VARCHAR}, '%')
    </if>
    <if test="record.val != null">
      and `Val` = #{record.val,jdbcType=DOUBLE}
    </if>
    <if test="record.ts != null">
      and `Ts` = #{record.ts,jdbcType=TIMESTAMP}
    </if>
    <if test="record.signalId != null and record.signalId !=''">
      and `Signal_Id` like concat('%', #{record.signalId,jdbcType=VARCHAR}, '%')
    </if>
  </select>
  <select id="exist" parameterType="com.delai.bees.tops.entity.BitAnalogSignals" resultType="boolean">
    select count(1) from `Bit_Analog_Signals` where 1=1 
    <if test="record.id != null">
      and `Id` = #{record.id,jdbcType=VARCHAR}
    </if>
    <if test="record.name != null">
      and `Name` = #{record.name,jdbcType=VARCHAR}
    </if>
    <if test="record.val != null">
      and `Val` = #{record.val,jdbcType=DOUBLE}
    </if>
    <if test="record.ts != null">
      and `Ts` = #{record.ts,jdbcType=TIMESTAMP}
    </if>
    <if test="record.signalId != null">
      and `Signal_Id` = #{record.signalId,jdbcType=VARCHAR}
    </if>
  </select>
  <select id="existPrimaryKey" resultType="boolean">
    select count(1) from `Bit_Analog_Signals` where 1=1  and Id=#{id, jdbcType=VARCHAR}
  </select>
  <select id="count" parameterType="com.delai.bees.tops.entity.BitAnalogSignals" resultType="java.lang.Integer">
    select count(1) from `Bit_Analog_Signals` where 1 = 1 
    <if test="record.id != null">
      and `Id` = #{record.id,jdbcType=VARCHAR}
    </if>
    <if test="record.name != null">
      and `Name` = #{record.name,jdbcType=VARCHAR}
    </if>
    <if test="record.val != null">
      and `Val` = #{record.val,jdbcType=DOUBLE}
    </if>
    <if test="record.ts != null">
      and `Ts` = #{record.ts,jdbcType=TIMESTAMP}
    </if>
    <if test="record.signalId != null">
      and `Signal_Id` = #{record.signalId,jdbcType=VARCHAR}
    </if>
  </select>
  <insert id="igsert" parameterType="com.delai.bees.tops.entity.BitAnalogSignals">
    insert ignore into `Bit_Analog_Signals` 
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="record.id != null">
        `Id`,
      </if>
      <if test="record.name != null">
        `Name`,
      </if>
      <if test="record.val != null">
        `Val`,
      </if>
      <if test="record.ts != null">
        `Ts`,
      </if>
      <if test="record.signalId != null">
        `Signal_Id`,
      </if>
    </trim>
     VALUES 
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="record.id != null">
        #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.val != null">
        #{record.val,jdbcType=DOUBLE},
      </if>
      <if test="record.ts != null">
        #{record.ts,jdbcType=TIMESTAMP},
      </if>
      <if test="record.signalId != null">
        #{record.signalId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <insert id="batigsert" parameterType="com.delai.bees.tops.entity.BitAnalogSignals">
    insert ignore into `Bit_Analog_Signals` 
    <trim prefix="(" suffix=")" suffixOverrides=",">
      `Id`,
      `Name`,
      `Val`,
      `Ts`,
      `Signal_Id`,
    </trim>
     VALUE 
    <foreach collection="records" index="index" item="record" separator=",">
      <trim prefix="(" suffix=")" suffixOverrides=",">
        #{record.id,jdbcType=VARCHAR},
        #{record.name,jdbcType=VARCHAR},
        #{record.val,jdbcType=DOUBLE},
        #{record.ts,jdbcType=TIMESTAMP},
        #{record.signalId,jdbcType=VARCHAR},
      </trim>
    </foreach>
  </insert>
  <insert id="upsert" parameterType="com.delai.bees.tops.entity.BitAnalogSignals">
    insert into `Bit_Analog_Signals` 
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="record.id != null">
        `Id`,
      </if>
      <if test="record.name != null">
        `Name`,
      </if>
      <if test="record.val != null">
        `Val`,
      </if>
      <if test="record.ts != null">
        `Ts`,
      </if>
      <if test="record.signalId != null">
        `Signal_Id`,
      </if>
    </trim>
     VALUES 
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="record.id != null">
        #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.val != null">
        #{record.val,jdbcType=DOUBLE},
      </if>
      <if test="record.ts != null">
        #{record.ts,jdbcType=TIMESTAMP},
      </if>
      <if test="record.signalId != null">
        #{record.signalId,jdbcType=VARCHAR},
      </if>
    </trim>
     on duplicate key update `Id` = values(`Id`),`Name` = values(`Name`),`Val` = values(`Val`),`Ts` = values(`Ts`),`Signal_Id` = values(`Signal_Id`)
  </insert>
  <insert id="batupsert" parameterType="com.delai.bees.tops.entity.BitAnalogSignals">
    insert into `Bit_Analog_Signals` 
    <trim prefix="(" suffix=")" suffixOverrides=",">
      `Id`,
      `Name`,
      `Val`,
      `Ts`,
      `Signal_Id`,
    </trim>
     VALUE 
    <foreach collection="records" index="index" item="record" separator=",">
      <trim prefix="(" suffix=")" suffixOverrides=",">
        #{record.id,jdbcType=VARCHAR},
        #{record.name,jdbcType=VARCHAR},
        #{record.val,jdbcType=DOUBLE},
        #{record.ts,jdbcType=TIMESTAMP},
        #{record.signalId,jdbcType=VARCHAR},
      </trim>
    </foreach>
     on duplicate key update `Name` = values(`Name`),`Val` = values(`Val`),`Ts` = values(`Ts`),`Signal_Id` = values(`Signal_Id`)
  </insert>
  <select id="qcondition" parameterType="com.delai.bees.tops.entity.BitAnalogSignals" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" /> from `Bit_Analog_Signals` where 1=1 
    <if test="condition != null">
      and ${condition} 
    </if>
    <if test="record.id != null">
      and `Id` = #{record.id,jdbcType=VARCHAR}
    </if>
    <if test="record.name != null">
      and `Name` = #{record.name,jdbcType=VARCHAR}
    </if>
    <if test="record.val != null">
      and `Val` = #{record.val,jdbcType=DOUBLE}
    </if>
    <if test="record.ts != null">
      and `Ts` = #{record.ts,jdbcType=TIMESTAMP}
    </if>
    <if test="record.signalId != null">
      and `Signal_Id` = #{record.signalId,jdbcType=VARCHAR}
    </if>
  </select>
  <select id="scondition" parameterType="com.delai.bees.tops.entity.BitAnalogSignals" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" /> from `Bit_Analog_Signals` where 1=1 
    <if test="condition != null">
      and ${condition} 
    </if>
    <if test="record.id != null and record.id !=''">
      and `Id` like concat('%', #{record.id,jdbcType=VARCHAR}, '%')
    </if>
    <if test="record.name != null and record.name !=''">
      and `Name` like concat('%', #{record.name,jdbcType=VARCHAR}, '%')
    </if>
    <if test="record.val != null">
      and `Val` = #{record.val,jdbcType=DOUBLE}
    </if>
    <if test="record.ts != null">
      and `Ts` = #{record.ts,jdbcType=TIMESTAMP}
    </if>
    <if test="record.signalId != null and record.signalId !=''">
      and `Signal_Id` like concat('%', #{record.signalId,jdbcType=VARCHAR}, '%')
    </if>
  </select>
</mapper>