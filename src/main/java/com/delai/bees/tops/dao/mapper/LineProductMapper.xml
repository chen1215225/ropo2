<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.delai.bees.tops.dao.LineProductMapper">
  <resultMap id="BaseResultMap" type="com.delai.bees.tops.entity.LineProduct">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Mar 24 11:42:48 CST 2019.
    -->
    <id column="Id" jdbcType="INTEGER" property="id" />
    <result column="On" jdbcType="TIMESTAMP" property="on" />
    <result column="Off" jdbcType="TIMESTAMP" property="off" />
    <result column="OEE" jdbcType="VARCHAR" property="oee" />
    <result column="EFF" jdbcType="VARCHAR" property="eff" />
    <result column="Products" jdbcType="BIGINT" property="products" />
    <result column="Rejected" jdbcType="BIGINT" property="rejected" />
    <result column="Loss" jdbcType="BIGINT" property="loss" />
    <result column="Time" jdbcType="VARCHAR" property="time" />
    <result column="Stacker_Product" jdbcType="BIGINT" property="stackerProduct" />
    <result column="Bottle_Blowing_Product" jdbcType="BIGINT" property="bottleBlowingProduct" />
    <result column="Implanter_Product" jdbcType="BIGINT" property="implanterProduct" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Mar 24 11:42:48 CST 2019.
    -->
    `Id`, `On`, `Off`, `OEE`, `EFF`, `Products`, `Rejected`, `Loss`, `Time`, `Stacker_Product`, 
    `Bottle_Blowing_Product`, `Implanter_Product`
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Mar 24 11:42:48 CST 2019.
    -->
    select 
    <include refid="Base_Column_List" />
    from `Line_Product`
    where `Id` = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Mar 24 11:42:48 CST 2019.
    -->
    delete from `Line_Product`
    where `Id` = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.delai.bees.tops.entity.LineProduct">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Mar 24 11:42:48 CST 2019.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into `Line_Product` (`On`, `Off`, `OEE`, 
      `EFF`, `Products`, `Rejected`, 
      `Loss`, `Time`, `Stacker_Product`, 
      `Bottle_Blowing_Product`, `Implanter_Product`)
    values (#{on,jdbcType=TIMESTAMP}, #{off,jdbcType=TIMESTAMP}, #{oee,jdbcType=VARCHAR}, 
      #{eff,jdbcType=VARCHAR}, #{products,jdbcType=BIGINT}, #{rejected,jdbcType=BIGINT}, 
      #{loss,jdbcType=BIGINT}, #{time,jdbcType=VARCHAR}, #{stackerProduct,jdbcType=BIGINT}, 
      #{bottleBlowingProduct,jdbcType=BIGINT}, #{implanterProduct,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.delai.bees.tops.entity.LineProduct">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Mar 24 11:42:48 CST 2019.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into `Line_Product`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="on != null">
        `On`,
      </if>
      <if test="off != null">
        `Off`,
      </if>
      <if test="oee != null">
        `OEE`,
      </if>
      <if test="eff != null">
        `EFF`,
      </if>
      <if test="products != null">
        `Products`,
      </if>
      <if test="rejected != null">
        `Rejected`,
      </if>
      <if test="loss != null">
        `Loss`,
      </if>
      <if test="time != null">
        `Time`,
      </if>
      <if test="stackerProduct != null">
        `Stacker_Product`,
      </if>
      <if test="bottleBlowingProduct != null">
        `Bottle_Blowing_Product`,
      </if>
      <if test="implanterProduct != null">
        `Implanter_Product`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="on != null">
        #{on,jdbcType=TIMESTAMP},
      </if>
      <if test="off != null">
        #{off,jdbcType=TIMESTAMP},
      </if>
      <if test="oee != null">
        #{oee,jdbcType=VARCHAR},
      </if>
      <if test="eff != null">
        #{eff,jdbcType=VARCHAR},
      </if>
      <if test="products != null">
        #{products,jdbcType=BIGINT},
      </if>
      <if test="rejected != null">
        #{rejected,jdbcType=BIGINT},
      </if>
      <if test="loss != null">
        #{loss,jdbcType=BIGINT},
      </if>
      <if test="time != null">
        #{time,jdbcType=VARCHAR},
      </if>
      <if test="stackerProduct != null">
        #{stackerProduct,jdbcType=BIGINT},
      </if>
      <if test="bottleBlowingProduct != null">
        #{bottleBlowingProduct,jdbcType=BIGINT},
      </if>
      <if test="implanterProduct != null">
        #{implanterProduct,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.delai.bees.tops.entity.LineProduct">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Mar 24 11:42:48 CST 2019.
    -->
    update `Line_Product`
    <set>
      <if test="on != null">
        `On` = #{on,jdbcType=TIMESTAMP},
      </if>
      <if test="off != null">
        `Off` = #{off,jdbcType=TIMESTAMP},
      </if>
      <if test="oee != null">
        `OEE` = #{oee,jdbcType=VARCHAR},
      </if>
      <if test="eff != null">
        `EFF` = #{eff,jdbcType=VARCHAR},
      </if>
      <if test="products != null">
        `Products` = #{products,jdbcType=BIGINT},
      </if>
      <if test="rejected != null">
        `Rejected` = #{rejected,jdbcType=BIGINT},
      </if>
      <if test="loss != null">
        `Loss` = #{loss,jdbcType=BIGINT},
      </if>
      <if test="time != null">
        `Time` = #{time,jdbcType=VARCHAR},
      </if>
      <if test="stackerProduct != null">
        `Stacker_Product` = #{stackerProduct,jdbcType=BIGINT},
      </if>
      <if test="bottleBlowingProduct != null">
        `Bottle_Blowing_Product` = #{bottleBlowingProduct,jdbcType=BIGINT},
      </if>
      <if test="implanterProduct != null">
        `Implanter_Product` = #{implanterProduct,jdbcType=BIGINT},
      </if>
    </set>
    where `Id` = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.delai.bees.tops.entity.LineProduct">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Mar 24 11:42:48 CST 2019.
    -->
    update `Line_Product`
    set `On` = #{on,jdbcType=TIMESTAMP},
      `Off` = #{off,jdbcType=TIMESTAMP},
      `OEE` = #{oee,jdbcType=VARCHAR},
      `EFF` = #{eff,jdbcType=VARCHAR},
      `Products` = #{products,jdbcType=BIGINT},
      `Rejected` = #{rejected,jdbcType=BIGINT},
      `Loss` = #{loss,jdbcType=BIGINT},
      `Time` = #{time,jdbcType=VARCHAR},
      `Stacker_Product` = #{stackerProduct,jdbcType=BIGINT},
      `Bottle_Blowing_Product` = #{bottleBlowingProduct,jdbcType=BIGINT},
      `Implanter_Product` = #{implanterProduct,jdbcType=BIGINT}
    where `Id` = #{id,jdbcType=INTEGER}
  </update>
  <select id="condition" resultMap="BaseResultMap">
    select <include refid='Base_Column_List' /> from `Line_Product` where ${condition}
  </select>
  <delete id="deleteByIds">
    delete from `Line_Product` where 1=1 	
	<choose>  
	 <when test='records!=null and records.size>0'>  
	     and `Id` in  
	     <foreach collection='records' item='record' index='index' open='(' close=')' separator=','>  
	         #{record.id}  
	     </foreach>  
	 </when>  
	 <otherwise>  
	     and 1 &lt;&gt; 1  
	 </otherwise>  
	</choose>  

  </delete>
  <select id="findAll" resultMap="BaseResultMap">
    select <include refid='Base_Column_List' /> from `Line_Product` where 1=1 
  </select>
  <select id="findByIds" parameterType="com.delai.bees.tops.entity.LineProduct" resultMap="BaseResultMap">
    select <include refid='Base_Column_List' /> from `Line_Product` where 1=1 	
	<choose>  
	 <when test='ids!=null and ids.size>0'>  
	     and `Id` in  
	     <foreach collection='ids' item='id' index='index' open='(' close=')' separator=','>  
	         #{id}  
	     </foreach>  
	 </when>  
	 <otherwise>  
	     and 1 &lt;&gt; 1  
	 </otherwise>  
	</choose>  

  </select>
  <select id="query" parameterType="com.delai.bees.tops.entity.LineProduct" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" /> from `Line_Product` where 1=1 
    <if test="record.id != null">
      and `Id` = #{record.id,jdbcType=INTEGER}
    </if>
    <if test="record.on != null">
      and `On` = #{record.on,jdbcType=TIMESTAMP}
    </if>
    <if test="record.off != null">
      and `Off` = #{record.off,jdbcType=TIMESTAMP}
    </if>
    <if test="record.oee != null">
      and `OEE` = #{record.oee,jdbcType=VARCHAR}
    </if>
    <if test="record.eff != null">
      and `EFF` = #{record.eff,jdbcType=VARCHAR}
    </if>
    <if test="record.products != null">
      and `Products` = #{record.products,jdbcType=BIGINT}
    </if>
    <if test="record.rejected != null">
      and `Rejected` = #{record.rejected,jdbcType=BIGINT}
    </if>
    <if test="record.loss != null">
      and `Loss` = #{record.loss,jdbcType=BIGINT}
    </if>
    <if test="record.time != null">
      and `Time` = #{record.time,jdbcType=VARCHAR}
    </if>
    <if test="record.stackerProduct != null">
      and `Stacker_Product` = #{record.stackerProduct,jdbcType=BIGINT}
    </if>
    <if test="record.bottleBlowingProduct != null">
      and `Bottle_Blowing_Product` = #{record.bottleBlowingProduct,jdbcType=BIGINT}
    </if>
    <if test="record.implanterProduct != null">
      and `Implanter_Product` = #{record.implanterProduct,jdbcType=BIGINT}
    </if>
  </select>
  <select id="example" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" /> from `Line_Product` where 1=1 order by RAND() limit 1
  </select>
  <select id="nexample" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" /> from `Line_Product` where 1=1 order by RAND() limit #{n}
  </select>
  <select id="search" parameterType="com.delai.bees.tops.entity.LineProduct" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" /> from `Line_Product` where 1=1 
    <if test="record.id != null">
      and `Id` = #{record.id,jdbcType=INTEGER}
    </if>
    <if test="record.on != null">
      and `On` = #{record.on,jdbcType=TIMESTAMP}
    </if>
    <if test="record.off != null">
      and `Off` = #{record.off,jdbcType=TIMESTAMP}
    </if>
    <if test="record.oee != null and record.oee !=''">
      and `OEE` like concat('%', #{record.oee,jdbcType=VARCHAR}, '%')
    </if>
    <if test="record.eff != null and record.eff !=''">
      and `EFF` like concat('%', #{record.eff,jdbcType=VARCHAR}, '%')
    </if>
    <if test="record.products != null">
      and `Products` = #{record.products,jdbcType=BIGINT}
    </if>
    <if test="record.rejected != null">
      and `Rejected` = #{record.rejected,jdbcType=BIGINT}
    </if>
    <if test="record.loss != null">
      and `Loss` = #{record.loss,jdbcType=BIGINT}
    </if>
    <if test="record.time != null and record.time !=''">
      and `Time` like concat('%', #{record.time,jdbcType=VARCHAR}, '%')
    </if>
    <if test="record.stackerProduct != null">
      and `Stacker_Product` = #{record.stackerProduct,jdbcType=BIGINT}
    </if>
    <if test="record.bottleBlowingProduct != null">
      and `Bottle_Blowing_Product` = #{record.bottleBlowingProduct,jdbcType=BIGINT}
    </if>
    <if test="record.implanterProduct != null">
      and `Implanter_Product` = #{record.implanterProduct,jdbcType=BIGINT}
    </if>
  </select>
  <select id="exist" parameterType="com.delai.bees.tops.entity.LineProduct" resultType="boolean">
    select count(1) from `Line_Product` where 1=1 
    <if test="record.id != null">
      and `Id` = #{record.id,jdbcType=INTEGER}
    </if>
    <if test="record.on != null">
      and `On` = #{record.on,jdbcType=TIMESTAMP}
    </if>
    <if test="record.off != null">
      and `Off` = #{record.off,jdbcType=TIMESTAMP}
    </if>
    <if test="record.oee != null">
      and `OEE` = #{record.oee,jdbcType=VARCHAR}
    </if>
    <if test="record.eff != null">
      and `EFF` = #{record.eff,jdbcType=VARCHAR}
    </if>
    <if test="record.products != null">
      and `Products` = #{record.products,jdbcType=BIGINT}
    </if>
    <if test="record.rejected != null">
      and `Rejected` = #{record.rejected,jdbcType=BIGINT}
    </if>
    <if test="record.loss != null">
      and `Loss` = #{record.loss,jdbcType=BIGINT}
    </if>
    <if test="record.time != null">
      and `Time` = #{record.time,jdbcType=VARCHAR}
    </if>
    <if test="record.stackerProduct != null">
      and `Stacker_Product` = #{record.stackerProduct,jdbcType=BIGINT}
    </if>
    <if test="record.bottleBlowingProduct != null">
      and `Bottle_Blowing_Product` = #{record.bottleBlowingProduct,jdbcType=BIGINT}
    </if>
    <if test="record.implanterProduct != null">
      and `Implanter_Product` = #{record.implanterProduct,jdbcType=BIGINT}
    </if>
  </select>
  <select id="existPrimaryKey" resultType="boolean">
    select count(1) from `Line_Product` where 1=1  and Id=#{id, jdbcType=INTEGER}
  </select>
  <select id="count" parameterType="com.delai.bees.tops.entity.LineProduct" resultType="java.lang.Integer">
    select count(1) from `Line_Product` where 1 = 1 
    <if test="record.id != null">
      and `Id` = #{record.id,jdbcType=INTEGER}
    </if>
    <if test="record.on != null">
      and `On` = #{record.on,jdbcType=TIMESTAMP}
    </if>
    <if test="record.off != null">
      and `Off` = #{record.off,jdbcType=TIMESTAMP}
    </if>
    <if test="record.oee != null">
      and `OEE` = #{record.oee,jdbcType=VARCHAR}
    </if>
    <if test="record.eff != null">
      and `EFF` = #{record.eff,jdbcType=VARCHAR}
    </if>
    <if test="record.products != null">
      and `Products` = #{record.products,jdbcType=BIGINT}
    </if>
    <if test="record.rejected != null">
      and `Rejected` = #{record.rejected,jdbcType=BIGINT}
    </if>
    <if test="record.loss != null">
      and `Loss` = #{record.loss,jdbcType=BIGINT}
    </if>
    <if test="record.time != null">
      and `Time` = #{record.time,jdbcType=VARCHAR}
    </if>
    <if test="record.stackerProduct != null">
      and `Stacker_Product` = #{record.stackerProduct,jdbcType=BIGINT}
    </if>
    <if test="record.bottleBlowingProduct != null">
      and `Bottle_Blowing_Product` = #{record.bottleBlowingProduct,jdbcType=BIGINT}
    </if>
    <if test="record.implanterProduct != null">
      and `Implanter_Product` = #{record.implanterProduct,jdbcType=BIGINT}
    </if>
  </select>
  <insert id="igsert" parameterType="com.delai.bees.tops.entity.LineProduct">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert ignore into `Line_Product` 
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="record.id != null">
        `Id`,
      </if>
      <if test="record.on != null">
        `On`,
      </if>
      <if test="record.off != null">
        `Off`,
      </if>
      <if test="record.oee != null">
        `OEE`,
      </if>
      <if test="record.eff != null">
        `EFF`,
      </if>
      <if test="record.products != null">
        `Products`,
      </if>
      <if test="record.rejected != null">
        `Rejected`,
      </if>
      <if test="record.loss != null">
        `Loss`,
      </if>
      <if test="record.time != null">
        `Time`,
      </if>
      <if test="record.stackerProduct != null">
        `Stacker_Product`,
      </if>
      <if test="record.bottleBlowingProduct != null">
        `Bottle_Blowing_Product`,
      </if>
      <if test="record.implanterProduct != null">
        `Implanter_Product`,
      </if>
    </trim>
     VALUES 
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="record.id != null">
        #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.on != null">
        #{record.on,jdbcType=TIMESTAMP},
      </if>
      <if test="record.off != null">
        #{record.off,jdbcType=TIMESTAMP},
      </if>
      <if test="record.oee != null">
        #{record.oee,jdbcType=VARCHAR},
      </if>
      <if test="record.eff != null">
        #{record.eff,jdbcType=VARCHAR},
      </if>
      <if test="record.products != null">
        #{record.products,jdbcType=BIGINT},
      </if>
      <if test="record.rejected != null">
        #{record.rejected,jdbcType=BIGINT},
      </if>
      <if test="record.loss != null">
        #{record.loss,jdbcType=BIGINT},
      </if>
      <if test="record.time != null">
        #{record.time,jdbcType=VARCHAR},
      </if>
      <if test="record.stackerProduct != null">
        #{record.stackerProduct,jdbcType=BIGINT},
      </if>
      <if test="record.bottleBlowingProduct != null">
        #{record.bottleBlowingProduct,jdbcType=BIGINT},
      </if>
      <if test="record.implanterProduct != null">
        #{record.implanterProduct,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <insert id="batigsert" parameterType="com.delai.bees.tops.entity.LineProduct">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert ignore into `Line_Product` 
    <trim prefix="(" suffix=")" suffixOverrides=",">
      `Id`,
      `On`,
      `Off`,
      `OEE`,
      `EFF`,
      `Products`,
      `Rejected`,
      `Loss`,
      `Time`,
      `Stacker_Product`,
      `Bottle_Blowing_Product`,
      `Implanter_Product`,
    </trim>
     VALUE 
    <foreach collection="records" index="index" item="record" separator=",">
      <trim prefix="(" suffix=")" suffixOverrides=",">
        #{record.id,jdbcType=INTEGER},
        #{record.on,jdbcType=TIMESTAMP},
        #{record.off,jdbcType=TIMESTAMP},
        #{record.oee,jdbcType=VARCHAR},
        #{record.eff,jdbcType=VARCHAR},
        #{record.products,jdbcType=BIGINT},
        #{record.rejected,jdbcType=BIGINT},
        #{record.loss,jdbcType=BIGINT},
        #{record.time,jdbcType=VARCHAR},
        #{record.stackerProduct,jdbcType=BIGINT},
        #{record.bottleBlowingProduct,jdbcType=BIGINT},
        #{record.implanterProduct,jdbcType=BIGINT},
      </trim>
    </foreach>
  </insert>
  <insert id="upsert" parameterType="com.delai.bees.tops.entity.LineProduct">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into `Line_Product` 
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="record.id != null">
        `Id`,
      </if>
      <if test="record.on != null">
        `On`,
      </if>
      <if test="record.off != null">
        `Off`,
      </if>
      <if test="record.oee != null">
        `OEE`,
      </if>
      <if test="record.eff != null">
        `EFF`,
      </if>
      <if test="record.products != null">
        `Products`,
      </if>
      <if test="record.rejected != null">
        `Rejected`,
      </if>
      <if test="record.loss != null">
        `Loss`,
      </if>
      <if test="record.time != null">
        `Time`,
      </if>
      <if test="record.stackerProduct != null">
        `Stacker_Product`,
      </if>
      <if test="record.bottleBlowingProduct != null">
        `Bottle_Blowing_Product`,
      </if>
      <if test="record.implanterProduct != null">
        `Implanter_Product`,
      </if>
    </trim>
     VALUES 
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="record.id != null">
        #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.on != null">
        #{record.on,jdbcType=TIMESTAMP},
      </if>
      <if test="record.off != null">
        #{record.off,jdbcType=TIMESTAMP},
      </if>
      <if test="record.oee != null">
        #{record.oee,jdbcType=VARCHAR},
      </if>
      <if test="record.eff != null">
        #{record.eff,jdbcType=VARCHAR},
      </if>
      <if test="record.products != null">
        #{record.products,jdbcType=BIGINT},
      </if>
      <if test="record.rejected != null">
        #{record.rejected,jdbcType=BIGINT},
      </if>
      <if test="record.loss != null">
        #{record.loss,jdbcType=BIGINT},
      </if>
      <if test="record.time != null">
        #{record.time,jdbcType=VARCHAR},
      </if>
      <if test="record.stackerProduct != null">
        #{record.stackerProduct,jdbcType=BIGINT},
      </if>
      <if test="record.bottleBlowingProduct != null">
        #{record.bottleBlowingProduct,jdbcType=BIGINT},
      </if>
      <if test="record.implanterProduct != null">
        #{record.implanterProduct,jdbcType=BIGINT},
      </if>
    </trim>
     on duplicate key update `Id` = values(`Id`),`On` = values(`On`),`Off` = values(`Off`),`OEE` = values(`OEE`),`EFF` = values(`EFF`),`Products` = values(`Products`),`Rejected` = values(`Rejected`),`Loss` = values(`Loss`),`Time` = values(`Time`),`Stacker_Product` = values(`Stacker_Product`),`Bottle_Blowing_Product` = values(`Bottle_Blowing_Product`),`Implanter_Product` = values(`Implanter_Product`)
  </insert>
  <insert id="batupsert" parameterType="com.delai.bees.tops.entity.LineProduct">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into `Line_Product` 
    <trim prefix="(" suffix=")" suffixOverrides=",">
      `Id`,
      `On`,
      `Off`,
      `OEE`,
      `EFF`,
      `Products`,
      `Rejected`,
      `Loss`,
      `Time`,
      `Stacker_Product`,
      `Bottle_Blowing_Product`,
      `Implanter_Product`,
    </trim>
     VALUE 
    <foreach collection="records" index="index" item="record" separator=",">
      <trim prefix="(" suffix=")" suffixOverrides=",">
        #{record.id,jdbcType=INTEGER},
        #{record.on,jdbcType=TIMESTAMP},
        #{record.off,jdbcType=TIMESTAMP},
        #{record.oee,jdbcType=VARCHAR},
        #{record.eff,jdbcType=VARCHAR},
        #{record.products,jdbcType=BIGINT},
        #{record.rejected,jdbcType=BIGINT},
        #{record.loss,jdbcType=BIGINT},
        #{record.time,jdbcType=VARCHAR},
        #{record.stackerProduct,jdbcType=BIGINT},
        #{record.bottleBlowingProduct,jdbcType=BIGINT},
        #{record.implanterProduct,jdbcType=BIGINT},
      </trim>
    </foreach>
     on duplicate key update `On` = values(`On`),`Off` = values(`Off`),`OEE` = values(`OEE`),`EFF` = values(`EFF`),`Products` = values(`Products`),`Rejected` = values(`Rejected`),`Loss` = values(`Loss`),`Time` = values(`Time`),`Stacker_Product` = values(`Stacker_Product`),`Bottle_Blowing_Product` = values(`Bottle_Blowing_Product`),`Implanter_Product` = values(`Implanter_Product`)
  </insert>
  <select id="qcondition" parameterType="com.delai.bees.tops.entity.LineProduct" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" /> from `Line_Product` where 1=1 
    <if test="condition != null">
      and ${condition} 
    </if>
    <if test="record.id != null">
      and `Id` = #{record.id,jdbcType=INTEGER}
    </if>
    <if test="record.on != null">
      and `On` = #{record.on,jdbcType=TIMESTAMP}
    </if>
    <if test="record.off != null">
      and `Off` = #{record.off,jdbcType=TIMESTAMP}
    </if>
    <if test="record.oee != null">
      and `OEE` = #{record.oee,jdbcType=VARCHAR}
    </if>
    <if test="record.eff != null">
      and `EFF` = #{record.eff,jdbcType=VARCHAR}
    </if>
    <if test="record.products != null">
      and `Products` = #{record.products,jdbcType=BIGINT}
    </if>
    <if test="record.rejected != null">
      and `Rejected` = #{record.rejected,jdbcType=BIGINT}
    </if>
    <if test="record.loss != null">
      and `Loss` = #{record.loss,jdbcType=BIGINT}
    </if>
    <if test="record.time != null">
      and `Time` = #{record.time,jdbcType=VARCHAR}
    </if>
    <if test="record.stackerProduct != null">
      and `Stacker_Product` = #{record.stackerProduct,jdbcType=BIGINT}
    </if>
    <if test="record.bottleBlowingProduct != null">
      and `Bottle_Blowing_Product` = #{record.bottleBlowingProduct,jdbcType=BIGINT}
    </if>
    <if test="record.implanterProduct != null">
      and `Implanter_Product` = #{record.implanterProduct,jdbcType=BIGINT}
    </if>
  </select>
  <select id="scondition" parameterType="com.delai.bees.tops.entity.LineProduct" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" /> from `Line_Product` where 1=1 
    <if test="condition != null">
      and ${condition} 
    </if>
    <if test="record.id != null">
      and `Id` = #{record.id,jdbcType=INTEGER}
    </if>
    <if test="record.on != null">
      and `On` = #{record.on,jdbcType=TIMESTAMP}
    </if>
    <if test="record.off != null">
      and `Off` = #{record.off,jdbcType=TIMESTAMP}
    </if>
    <if test="record.oee != null and record.oee !=''">
      and `OEE` like concat('%', #{record.oee,jdbcType=VARCHAR}, '%')
    </if>
    <if test="record.eff != null and record.eff !=''">
      and `EFF` like concat('%', #{record.eff,jdbcType=VARCHAR}, '%')
    </if>
    <if test="record.products != null">
      and `Products` = #{record.products,jdbcType=BIGINT}
    </if>
    <if test="record.rejected != null">
      and `Rejected` = #{record.rejected,jdbcType=BIGINT}
    </if>
    <if test="record.loss != null">
      and `Loss` = #{record.loss,jdbcType=BIGINT}
    </if>
    <if test="record.time != null and record.time !=''">
      and `Time` like concat('%', #{record.time,jdbcType=VARCHAR}, '%')
    </if>
    <if test="record.stackerProduct != null">
      and `Stacker_Product` = #{record.stackerProduct,jdbcType=BIGINT}
    </if>
    <if test="record.bottleBlowingProduct != null">
      and `Bottle_Blowing_Product` = #{record.bottleBlowingProduct,jdbcType=BIGINT}
    </if>
    <if test="record.implanterProduct != null">
      and `Implanter_Product` = #{record.implanterProduct,jdbcType=BIGINT}
    </if>
  </select>
</mapper>